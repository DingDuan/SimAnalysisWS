/*
 * This file was automatically generated by EvoSuite
 * Sat Nov 30 05:59:28 GMT 2019
 */

package net.mooctest;

import org.junit.Test;
import static org.junit.Assert.*;
import net.mooctest.Pair;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class Pair_ESTest extends Pair_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      Integer integer0 = new Integer(1739);
      Pair<Object, Integer> pair0 = new Pair<Object, Integer>((Object) null, integer0);
      Object object0 = new Object();
      Pair<Object, Object> pair1 = Pair.of(object0, (Object) integer0);
      boolean boolean0 = pair0.equals(pair1);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      Pair<String, Object> pair0 = new Pair<String, Object>("t", "t");
      Pair<Object, Pair<String, Object>> pair1 = Pair.of((Object) null, pair0);
      Pair<Pair<Object, Object>, Object> pair2 = Pair.of((Pair<Object, Object>) null, (Object) pair1);
      Pair<Object, Object> pair3 = new Pair<Object, Object>((Object) null, pair2);
      boolean boolean0 = pair2.equals(pair3);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test2()  throws Throwable  {
      Integer integer0 = new Integer((-47));
      Pair<Integer, String> pair0 = new Pair<Integer, String>(integer0, "KW'L<;m4");
      Pair<String, Object> pair1 = Pair.of("KW'L<;m4", (Object) pair0);
      boolean boolean0 = pair1.equals(integer0);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test3()  throws Throwable  {
      Integer integer0 = new Integer((-47));
      Pair<Integer, String> pair0 = new Pair<Integer, String>(integer0, "KW'L<;m4");
      boolean boolean0 = pair0.equals(pair0);
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test4()  throws Throwable  {
      Integer integer0 = new Integer((-47));
      Pair<Integer, String> pair0 = new Pair<Integer, String>(integer0, "KW'L<;m4");
      Pair<String, Object> pair1 = Pair.of("KW'L<;m4", (Object) pair0);
      pair1.hashCode();
  }

  @Test(timeout = 4000)
  public void test5()  throws Throwable  {
      Integer integer0 = new Integer((-47));
      Pair<Integer, String> pair0 = new Pair<Integer, String>(integer0, "KW'L<;m4");
      Pair<String, Object> pair1 = Pair.of("KW'L<;m4", (Object) pair0);
      String string0 = pair1.toString();
      assertEquals("Pair{first=KW'L<;m4, second=Pair{first=-47, second=KW'L<;m4}}", string0);
  }
}
