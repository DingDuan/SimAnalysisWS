/*
 * This file was automatically generated by EvoSuite
 * Sat Nov 30 05:55:33 GMT 2019
 */

package net.mooctest;

import org.junit.Test;
import static org.junit.Assert.*;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;
import java.util.List;
import java.util.Map;
import java.util.Set;
import com.google.common.collect.ImmutableMap;
import com.google.common.collect.ImmutableSortedMap;

//@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class Arborescence_ESTest {
  @Test
  public void notGeneratedAnyTest() {
    // EvoSuite did not generate any tests
  }
  
  @Test(timeout = 4000)
  public void test1()  throws Throwable  {
	  ImmutableMap<String, String> ImmutableMap0 = ImmutableMap.of();
	  //ImmutableMap0.of("1", "2");
	  System.out.println(ImmutableMap0);
      Arborescence<String> arborescence0 = Arborescence.of((ImmutableMap<String, String>) ImmutableMap0);      
      assertEquals(ImmutableMap0,arborescence0.parents);
      Edge<String> edge1 = new Edge("1","2");
      assertNotNull(arborescence0.empty());
      boolean bool1 = arborescence0.contains(edge1);
      assertFalse(bool1);
      assertEquals("Arborescence{}",arborescence0.toString());
      assertEquals(31,arborescence0.hashCode());
      assertFalse(arborescence0.equals(edge1));
      ImmutableMap<String, String> ImmutableMap1 = ImmutableMap.of();
      Arborescence<String> arborescence1 = Arborescence.of((ImmutableMap<String, String>) ImmutableMap1);
      assertTrue(arborescence0.equals(arborescence1));
      assertFalse(arborescence0.equals(null));
      
      
      System.out.println(arborescence0.toString());
      
      
  }
}
