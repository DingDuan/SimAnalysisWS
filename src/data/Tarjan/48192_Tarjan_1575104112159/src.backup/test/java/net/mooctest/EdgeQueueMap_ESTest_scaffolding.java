/**
 * Scaffolding file used to store all the setups needed to run 
 * tests automatically generated by EvoSuite
 * Sat Nov 30 05:56:58 GMT 2019
 */

package net.mooctest;

import org.evosuite.runtime.annotation.EvoSuiteClassExclude;
import org.junit.BeforeClass;
import org.junit.Before;
import org.junit.After;
import org.junit.AfterClass;
import org.evosuite.runtime.sandbox.Sandbox;
import org.evosuite.runtime.sandbox.Sandbox.SandboxMode;

import static org.evosuite.shaded.org.mockito.Mockito.*;
@EvoSuiteClassExclude
public class EdgeQueueMap_ESTest_scaffolding {

  @org.junit.Rule 
  public org.evosuite.runtime.vnet.NonFunctionalRequirementRule nfr = new org.evosuite.runtime.vnet.NonFunctionalRequirementRule();

  private static final java.util.Properties defaultProperties = (java.util.Properties) java.lang.System.getProperties().clone(); 

  private org.evosuite.runtime.thread.ThreadStopper threadStopper =  new org.evosuite.runtime.thread.ThreadStopper (org.evosuite.runtime.thread.KillSwitchHandler.getInstance(), 3000);


  @BeforeClass 
  public static void initEvoSuiteFramework() { 
    org.evosuite.runtime.RuntimeSettings.className = "net.mooctest.EdgeQueueMap"; 
    org.evosuite.runtime.GuiSupport.initialize(); 
    org.evosuite.runtime.RuntimeSettings.maxNumberOfThreads = 100; 
    org.evosuite.runtime.RuntimeSettings.maxNumberOfIterationsPerLoop = 10000; 
    org.evosuite.runtime.RuntimeSettings.mockSystemIn = true; 
    org.evosuite.runtime.RuntimeSettings.sandboxMode = org.evosuite.runtime.sandbox.Sandbox.SandboxMode.RECOMMENDED; 
    org.evosuite.runtime.sandbox.Sandbox.initializeSecurityManagerForSUT(); 
    org.evosuite.runtime.classhandling.JDKClassResetter.init();
    setSystemProperties();
    initializeClasses();
    org.evosuite.runtime.Runtime.getInstance().resetRuntime(); 
    try { initMocksToAvoidTimeoutsInTheTests(); } catch(ClassNotFoundException e) {} 
  } 

  @AfterClass 
  public static void clearEvoSuiteFramework(){ 
    Sandbox.resetDefaultSecurityManager(); 
    java.lang.System.setProperties((java.util.Properties) defaultProperties.clone()); 
  } 

  @Before 
  public void initTestCase(){ 
    threadStopper.storeCurrentThreads();
    threadStopper.startRecordingTime();
    org.evosuite.runtime.jvm.ShutdownHookHandler.getInstance().initHandler(); 
    org.evosuite.runtime.sandbox.Sandbox.goingToExecuteSUTCode(); 
    setSystemProperties(); 
    org.evosuite.runtime.GuiSupport.setHeadless(); 
    org.evosuite.runtime.Runtime.getInstance().resetRuntime(); 
    org.evosuite.runtime.agent.InstrumentingAgent.activate(); 
  } 

  @After 
  public void doneWithTestCase(){ 
    threadStopper.killAndJoinClientThreads();
    org.evosuite.runtime.jvm.ShutdownHookHandler.getInstance().safeExecuteAddedHooks(); 
    org.evosuite.runtime.classhandling.JDKClassResetter.reset(); 
    resetClasses(); 
    org.evosuite.runtime.sandbox.Sandbox.doneWithExecutingSUTCode(); 
    org.evosuite.runtime.agent.InstrumentingAgent.deactivate(); 
    org.evosuite.runtime.GuiSupport.restoreHeadlessMode(); 
  } 

  public static void setSystemProperties() {
 
    java.lang.System.setProperties((java.util.Properties) defaultProperties.clone()); 
    java.lang.System.setProperty("file.encoding", "GBK"); 
    java.lang.System.setProperty("java.awt.headless", "true"); 
    java.lang.System.setProperty("java.io.tmpdir", "C:\\Users\\Administrator\\AppData\\Local\\Temp\\"); 
    java.lang.System.setProperty("user.country", "CN"); 
    java.lang.System.setProperty("user.dir", "C:\\mooctest\\projects\\3933\\48192\\Tarjan"); 
    java.lang.System.setProperty("user.home", "C:\\Users\\Administrator"); 
    java.lang.System.setProperty("user.language", "zh"); 
    java.lang.System.setProperty("user.name", "Administrator"); 
    java.lang.System.setProperty("user.timezone", "Asia/Shanghai"); 
  }

  private static void initializeClasses() {
    org.evosuite.runtime.classhandling.ClassStateSupport.initializeClasses(EdgeQueueMap_ESTest_scaffolding.class.getClassLoader() ,
      "com.github.javaparser.ast.stmt.ContinueStmt",
      "com.github.javaparser.ast.stmt.WhileStmt",
      "com.google.common.collect.Lists$RandomAccessPartition",
      "com.google.common.collect.Collections2",
      "com.github.javaparser.ast.stmt.UnparsableStmt",
      "com.github.javaparser.ast.nodeTypes.NodeWithBlockStmt",
      "com.google.common.collect.PeekingIterator",
      "com.github.javaparser.ast.type.Type",
      "com.github.javaparser.ast.nodeTypes.NodeWithRange",
      "com.google.common.collect.NullsLastOrdering",
      "com.github.javaparser.ast.expr.SimpleName",
      "com.google.common.collect.RegularImmutableMap",
      "com.google.common.collect.RegularImmutableBiMap",
      "net.mooctest.EdgeQueueMap$EdgeQueue",
      "com.google.common.collect.ByFunctionOrdering",
      "com.github.javaparser.ast.stmt.ThrowStmt",
      "com.google.common.collect.Iterators$12",
      "com.google.common.collect.Iterators$11",
      "com.google.common.collect.EmptyImmutableBiMap",
      "com.google.common.base.Predicate",
      "com.github.javaparser.HasParentNode",
      "com.github.javaparser.ast.expr.ArrayInitializerExpr",
      "com.google.common.base.Joiner",
      "com.github.javaparser.ast.nodeTypes.NodeWithOptionalBlockStmt",
      "com.github.javaparser.ast.Node$BreadthFirstIterator",
      "com.google.common.collect.NullsFirstOrdering",
      "com.github.javaparser.ast.Node$Parsedness",
      "com.google.common.collect.Iterators$14",
      "com.google.common.collect.Iterators$13",
      "net.mooctest.EdgeQueueMap",
      "com.google.common.collect.Lists$Partition",
      "com.google.common.collect.Lists",
      "com.google.common.collect.UnmodifiableListIterator",
      "com.github.javaparser.ast.stmt.SynchronizedStmt",
      "com.github.javaparser.ast.nodeTypes.NodeWithConstructors",
      "net.mooctest.FibonacciHeap",
      "com.google.common.base.Absent",
      "com.github.javaparser.ast.Node$TreeTraversal",
      "com.google.common.base.Joiner$MapJoiner",
      "com.github.javaparser.ast.expr.NameExpr",
      "com.github.javaparser.ast.stmt.IfStmt",
      "net.mooctest.Weighted",
      "com.github.javaparser.ast.nodeTypes.modifiers.NodeWithAbstractModifier",
      "com.google.common.base.Preconditions",
      "net.mooctest.FibonacciQueue$1",
      "com.google.common.collect.EmptyImmutableList",
      "com.google.common.collect.ImmutableMapValues",
      "com.github.javaparser.ast.stmt.LocalClassDeclarationStmt",
      "com.github.javaparser.ast.nodeTypes.modifiers.NodeWithFinalModifier",
      "com.google.common.base.Joiner$1",
      "com.github.javaparser.ast.nodeTypes.modifiers.NodeWithProtectedModifier",
      "com.google.common.base.Joiner$2",
      "com.github.javaparser.ast.observer.AstObserver",
      "com.github.javaparser.ast.stmt.EmptyStmt",
      "com.github.javaparser.ast.Node$DirectChildrenIterator",
      "com.google.common.collect.ImmutableCollection",
      "com.google.common.collect.ImmutableEnumMap",
      "com.github.javaparser.ast.ImportDeclaration",
      "com.github.javaparser.ast.body.ConstructorDeclaration",
      "com.github.javaparser.ast.nodeTypes.NodeWithSimpleName",
      "com.github.javaparser.ast.nodeTypes.NodeWithStatements",
      "com.github.javaparser.metamodel.NodeMetaModel",
      "com.github.javaparser.ast.Node$ParentsVisitor",
      "com.github.javaparser.ast.CompilationUnit",
      "com.google.common.base.Objects",
      "com.github.javaparser.ast.Node",
      "com.github.javaparser.ast.nodeTypes.NodeWithType",
      "com.google.common.collect.Iterators$6",
      "com.google.common.collect.BiMap",
      "com.google.common.collect.Iterators$7",
      "com.google.common.collect.Iterators$8",
      "com.google.common.collect.ImmutableSet",
      "com.github.javaparser.ast.Node$PostOrderIterator",
      "com.google.common.collect.Lists$AbstractListWrapper",
      "com.github.javaparser.ast.Node$1",
      "com.google.common.collect.Iterators$1",
      "com.google.common.collect.Iterators$2",
      "com.google.common.collect.Iterators$3",
      "net.mooctest.Edge$EdgeBuilder",
      "com.github.javaparser.ast.Node$PreOrderIterator",
      "com.github.javaparser.metamodel.SimpleNameMetaModel",
      "com.github.javaparser.ast.nodeTypes.NodeWithVariables",
      "com.google.common.collect.Lists$StringAsImmutableList",
      "com.google.common.collect.Lists$2",
      "com.github.javaparser.resolution.Resolvable",
      "com.github.javaparser.ast.nodeTypes.modifiers.NodeWithStrictfpModifier",
      "com.github.javaparser.ast.body.ClassOrInterfaceDeclaration",
      "com.google.common.collect.Lists$1",
      "com.github.javaparser.ast.stmt.ReturnStmt",
      "com.google.common.collect.Multiset",
      "com.google.common.base.Supplier",
      "net.mooctest.Arborescence",
      "com.github.javaparser.metamodel.BaseNodeMetaModel",
      "com.github.javaparser.ast.nodeTypes.NodeWithExtends",
      "com.github.javaparser.ast.nodeTypes.NodeWithBody",
      "com.google.common.collect.ImmutableList",
      "com.google.common.collect.ReverseOrdering",
      "com.github.javaparser.ast.nodeTypes.NodeWithTokenRange",
      "com.google.common.collect.ImmutableMap$1MapViewOfValuesAsSingletonSets",
      "net.mooctest.ExclusiveEdge",
      "com.github.javaparser.ast.body.BodyDeclaration",
      "com.github.javaparser.ast.stmt.BreakStmt",
      "com.github.javaparser.ast.observer.ObservableProperty",
      "com.github.javaparser.ast.comments.LineComment",
      "com.google.common.collect.Maps$EntryTransformer",
      "com.google.common.collect.Ordering",
      "com.google.common.collect.NaturalOrdering",
      "com.github.javaparser.ast.nodeTypes.modifiers.NodeWithPublicModifier",
      "com.google.common.collect.AllEqualOrdering",
      "com.github.javaparser.ast.nodeTypes.NodeWithIdentifier",
      "com.google.common.collect.ImmutableList$SubList",
      "com.github.javaparser.ast.nodeTypes.modifiers.NodeWithPrivateModifier",
      "com.google.common.collect.RegularImmutableList",
      "com.google.common.base.Optional",
      "com.github.javaparser.ast.Node$ObserverRegistrationMode",
      "net.mooctest.Pair",
      "com.google.common.collect.Lists$TransformingRandomAccessList",
      "com.github.javaparser.ast.expr.Expression",
      "com.github.javaparser.ast.nodeTypes.modifiers.NodeWithAccessModifiers",
      "com.google.common.collect.ImmutableMapKeySet",
      "com.github.javaparser.ast.stmt.LabeledStmt",
      "com.github.javaparser.ast.body.TypeDeclaration",
      "com.github.javaparser.ast.stmt.AssertStmt",
      "com.google.common.collect.SortedMapDifference",
      "com.github.javaparser.ast.visitor.Visitable",
      "com.google.common.collect.LexicographicalOrdering",
      "com.github.javaparser.ast.stmt.SwitchEntryStmt",
      "com.github.javaparser.ast.visitor.GenericVisitor",
      "com.github.javaparser.ast.comments.Comment",
      "com.google.common.base.Present",
      "com.github.javaparser.ast.stmt.BlockStmt",
      "com.github.javaparser.ast.PackageDeclaration",
      "com.github.javaparser.ast.stmt.ExpressionStmt",
      "com.google.common.collect.ImmutableAsList",
      "com.github.javaparser.ast.expr.Name",
      "net.mooctest.Partition",
      "com.google.common.collect.RegularImmutableAsList",
      "com.github.javaparser.ast.nodeTypes.NodeWithTypeArguments",
      "com.github.javaparser.ast.nodeTypes.NodeWithAnnotations",
      "com.github.javaparser.ast.nodeTypes.modifiers.NodeWithStaticModifier",
      "com.google.common.collect.UsingToStringOrdering",
      "com.github.javaparser.ast.stmt.SwitchStmt",
      "com.google.common.collect.Lists$TransformingSequentialList",
      "com.github.javaparser.ast.comments.BlockComment",
      "com.github.javaparser.printer.PrettyPrinterConfiguration",
      "com.github.javaparser.metamodel.StatementMetaModel",
      "com.google.common.collect.AbstractIterator",
      "com.github.javaparser.ast.visitor.VoidVisitor",
      "com.github.javaparser.ast.body.CallableDeclaration",
      "com.google.common.collect.ImmutableList$1",
      "com.google.common.collect.MapDifference",
      "com.github.javaparser.ast.body.MethodDeclaration",
      "com.google.common.collect.UnmodifiableIterator",
      "com.github.javaparser.ast.nodeTypes.NodeWithCondition",
      "com.github.javaparser.ast.nodeTypes.NodeWithExpression",
      "com.github.javaparser.ast.stmt.ForeachStmt",
      "com.google.common.collect.Lists$RandomAccessListWrapper",
      "com.github.javaparser.ast.DataKey",
      "com.github.javaparser.ast.observer.Observable",
      "com.github.javaparser.ast.nodeTypes.NodeWithParameters",
      "com.google.common.collect.ImmutableList$ReverseImmutableList",
      "com.google.common.collect.SingletonImmutableList",
      "com.github.javaparser.Range",
      "com.github.javaparser.ast.NodeList",
      "com.google.common.collect.Maps$9",
      "com.github.javaparser.ast.type.ReferenceType",
      "com.google.common.base.Function",
      "com.github.javaparser.ast.nodeTypes.NodeWithDeclaration",
      "com.google.common.collect.ImmutableMap",
      "com.google.common.collect.ComparatorOrdering",
      "com.google.common.collect.AbstractIndexedListIterator",
      "com.github.javaparser.ast.stmt.ExplicitConstructorInvocationStmt",
      "com.google.common.collect.ImmutableCollection$EmptyImmutableCollection",
      "com.github.javaparser.ast.stmt.ForStmt",
      "com.github.javaparser.ast.nodeTypes.NodeWithJavadoc",
      "com.google.common.collect.ExplicitOrdering",
      "com.github.javaparser.ast.stmt.TryStmt",
      "com.github.javaparser.utils.Utils",
      "com.github.javaparser.TokenRange",
      "com.github.javaparser.printer.PrettyPrintVisitor",
      "com.github.javaparser.ast.observer.ObservableProperty$Type",
      "com.github.javaparser.Position",
      "com.google.common.collect.CompoundOrdering",
      "com.google.common.collect.Iterators",
      "com.github.javaparser.ast.stmt.DoStmt",
      "com.google.common.collect.ImmutableBiMap",
      "com.github.javaparser.ast.nodeTypes.NodeWithName",
      "com.google.common.collect.SingletonImmutableBiMap",
      "net.mooctest.FibonacciQueue",
      "com.github.javaparser.ast.nodeTypes.NodeWithTypeParameters",
      "com.github.javaparser.ast.nodeTypes.NodeWithOptionalLabel",
      "com.github.javaparser.metamodel.BreakStmtMetaModel",
      "com.github.javaparser.printer.PrettyPrinter",
      "net.mooctest.Edge",
      "com.github.javaparser.ast.nodeTypes.NodeWithImplements",
      "com.github.javaparser.ast.nodeTypes.NodeWithModifiers",
      "com.github.javaparser.ast.type.ArrayType",
      "com.github.javaparser.ast.nodeTypes.NodeWithThrownExceptions",
      "com.github.javaparser.ast.stmt.Statement",
      "com.google.common.collect.Maps",
      "com.github.javaparser.ast.nodeTypes.NodeWithMembers",
      "com.google.common.collect.TransformedIterator",
      "com.github.javaparser.ast.body.FieldDeclaration",
      "com.google.common.collect.Iterators$MergingIterator"
    );
  } 
  private static void initMocksToAvoidTimeoutsInTheTests() throws ClassNotFoundException { 
    mock(Class.forName("java.lang.annotation.Annotation", false, EdgeQueueMap_ESTest_scaffolding.class.getClassLoader()));
    mock(Class.forName("java.util.Comparator", false, EdgeQueueMap_ESTest_scaffolding.class.getClassLoader()));
    mock(Class.forName("net.mooctest.Edge", false, EdgeQueueMap_ESTest_scaffolding.class.getClassLoader()));
    mock(Class.forName("net.mooctest.Pair", false, EdgeQueueMap_ESTest_scaffolding.class.getClassLoader()));
  }

  private static void resetClasses() {
    org.evosuite.runtime.classhandling.ClassResetter.getInstance().setClassLoader(EdgeQueueMap_ESTest_scaffolding.class.getClassLoader()); 

    org.evosuite.runtime.classhandling.ClassStateSupport.resetClasses(
      "net.mooctest.EdgeQueueMap",
      "net.mooctest.EdgeQueueMap$EdgeQueue",
      "com.google.common.base.Joiner",
      "com.google.common.base.Preconditions",
      "com.google.common.base.Joiner$1",
      "com.google.common.collect.Collections2",
      "com.google.common.base.Optional",
      "com.google.common.base.Absent",
      "com.google.common.base.Joiner$MapJoiner",
      "com.google.common.collect.Maps",
      "net.mooctest.ExclusiveEdge",
      "com.google.common.collect.ImmutableCollection$EmptyImmutableCollection",
      "com.google.common.collect.ImmutableCollection",
      "com.google.common.collect.ImmutableList",
      "com.google.common.collect.EmptyImmutableList",
      "net.mooctest.FibonacciQueue",
      "net.mooctest.FibonacciHeap",
      "com.google.common.collect.Ordering",
      "com.google.common.collect.ComparatorOrdering",
      "com.google.common.collect.NullsFirstOrdering",
      "net.mooctest.FibonacciQueue$1",
      "net.mooctest.Partition",
      "net.mooctest.Edge",
      "net.mooctest.Weighted",
      "net.mooctest.Pair",
      "net.mooctest.Arborescence",
      "com.google.common.collect.ImmutableMap",
      "com.google.common.collect.ImmutableBiMap",
      "com.google.common.collect.EmptyImmutableBiMap",
      "com.google.common.collect.RegularImmutableMap",
      "com.google.common.collect.AbstractMapEntry",
      "com.google.common.collect.ImmutableEntry",
      "com.google.common.collect.Hashing",
      "com.google.common.collect.RegularImmutableMap$TerminalEntry",
      "com.google.common.collect.RegularImmutableMap$NonTerminalEntry",
      "com.google.common.collect.NaturalOrdering",
      "com.google.common.collect.UnmodifiableIterator",
      "com.google.common.collect.UnmodifiableListIterator",
      "com.google.common.collect.Iterators$1",
      "com.google.common.collect.Iterators$2",
      "com.google.common.collect.Iterators",
      "com.google.common.collect.TransformedIterator",
      "com.google.common.collect.Iterators$8",
      "com.google.common.collect.ImmutableMap$Builder",
      "com.google.common.collect.ImmutableBiMap$Builder",
      "com.google.common.collect.Lists",
      "com.google.common.collect.ImmutableSortedMapFauxverideShim",
      "com.google.common.collect.EmptyImmutableSortedMap",
      "com.google.common.collect.ImmutableSet",
      "com.google.common.collect.ImmutableSortedSetFauxverideShim",
      "com.google.common.collect.EmptyImmutableSortedSet",
      "com.google.common.collect.ImmutableSortedSet",
      "com.google.common.collect.ImmutableSortedMap",
      "com.google.common.collect.ImmutableSortedMap$Builder",
      "com.github.javaparser.ast.NodeList",
      "com.google.common.collect.ImmutableSortedMap$1",
      "com.github.javaparser.printer.PrettyPrinter",
      "com.github.javaparser.printer.PrettyPrinterConfiguration",
      "com.github.javaparser.utils.Utils",
      "com.github.javaparser.ast.DataKey",
      "com.github.javaparser.ast.Node$1",
      "com.github.javaparser.ast.Node",
      "com.github.javaparser.ast.CompilationUnit",
      "com.github.javaparser.ast.PackageDeclaration",
      "com.github.javaparser.ast.expr.Name",
      "com.github.javaparser.ast.Node$Parsedness",
      "com.github.javaparser.ast.observer.ObservableProperty$Type",
      "com.github.javaparser.ast.observer.ObservableProperty",
      "com.github.javaparser.ast.body.BodyDeclaration",
      "com.github.javaparser.ast.body.TypeDeclaration",
      "com.github.javaparser.ast.body.ClassOrInterfaceDeclaration",
      "com.github.javaparser.ast.expr.SimpleName",
      "com.github.javaparser.ast.body.CallableDeclaration",
      "com.github.javaparser.ast.body.ConstructorDeclaration",
      "com.github.javaparser.ast.stmt.Statement",
      "com.github.javaparser.ast.stmt.BlockStmt",
      "com.github.javaparser.ast.body.AnnotationDeclaration",
      "com.github.javaparser.ParserConfiguration",
      "com.github.javaparser.ast.validator.Validators",
      "com.github.javaparser.ast.validator.Java1_0Validator",
      "com.github.javaparser.ast.validator.Java1_1Validator",
      "com.github.javaparser.ast.validator.Java1_2Validator",
      "com.github.javaparser.ast.validator.Java1_3Validator",
      "com.github.javaparser.ast.validator.Java1_4Validator",
      "com.github.javaparser.ast.validator.Java5Validator",
      "com.github.javaparser.ast.validator.Java6Validator",
      "com.github.javaparser.ast.validator.Java7Validator",
      "com.github.javaparser.ast.validator.Java8Validator",
      "com.github.javaparser.ast.validator.chunks.CommonValidators",
      "com.github.javaparser.ast.validator.SingleNodeTypeValidator",
      "com.github.javaparser.ast.validator.SimpleValidator",
      "com.github.javaparser.ast.validator.TreeVisitorValidator",
      "com.github.javaparser.ast.visitor.VoidVisitorAdapter",
      "com.github.javaparser.ast.validator.VisitorValidator",
      "com.github.javaparser.ast.validator.chunks.ModifierValidator",
      "com.github.javaparser.ast.validator.chunks.NoBinaryIntegerLiteralsValidator",
      "com.github.javaparser.ast.validator.chunks.NoUnderscoresInIntegerLiteralsValidator",
      "com.github.javaparser.ast.validator.ReservedKeywordValidator",
      "com.github.javaparser.utils.CodeGenerationUtils",
      "com.github.javaparser.ast.validator.Java9Validator",
      "com.github.javaparser.ast.validator.Java10Validator",
      "com.github.javaparser.ast.validator.Java11Validator",
      "com.github.javaparser.ast.validator.chunks.UnderscoreKeywordValidator",
      "com.github.javaparser.ast.validator.chunks.VarValidator",
      "com.github.javaparser.version.PostProcessors",
      "com.github.javaparser.version.Java10PostProcessor",
      "com.github.javaparser.version.Java11PostProcessor",
      "com.github.javaparser.ParserConfiguration$LanguageLevel",
      "com.github.javaparser.JavaParser",
      "com.github.javaparser.ParseStart",
      "com.github.javaparser.Providers",
      "com.github.javaparser.StringProvider",
      "com.github.javaparser.GeneratedJavaParserBase",
      "com.github.javaparser.GeneratedJavaParser",
      "com.github.javaparser.GeneratedJavaParser$LookaheadSuccess",
      "com.github.javaparser.SimpleCharStream",
      "com.github.javaparser.GeneratedJavaParserTokenManager",
      "com.github.javaparser.ast.comments.CommentsCollection",
      "com.github.javaparser.TokenBase",
      "com.github.javaparser.Token",
      "com.github.javaparser.GeneratedJavaParser$JJCalls",
      "com.github.javaparser.JavaToken",
      "com.github.javaparser.Range",
      "com.github.javaparser.Position",
      "com.github.javaparser.TokenTypes",
      "com.github.javaparser.JavaToken$Category",
      "com.github.javaparser.ParseException",
      "com.github.javaparser.GeneratedJavaParserConstants",
      "com.github.javaparser.Problem",
      "com.github.javaparser.ParseResult",
      "com.github.javaparser.ParseProblemException",
      "com.google.common.collect.SingletonImmutableBiMap",
      "com.github.javaparser.ast.visitor.NoCommentHashCodeVisitor",
      "com.github.javaparser.ast.modules.ModuleDeclaration",
      "com.google.common.collect.RegularImmutableBiMap",
      "com.google.common.collect.RegularImmutableBiMap$BiMapEntry",
      "com.google.common.base.Objects",
      "com.google.common.base.Objects$ToStringHelper",
      "com.google.common.base.Objects$ToStringHelper$ValueHolder",
      "com.google.common.primitives.Doubles",
      "com.google.common.collect.ComparisonChain$1",
      "com.google.common.collect.ComparisonChain$InactiveComparisonChain",
      "com.google.common.collect.ComparisonChain",
      "com.github.javaparser.ast.visitor.CloneVisitor",
      "com.github.javaparser.ast.type.Type",
      "com.github.javaparser.ast.type.ReferenceType",
      "com.github.javaparser.ast.type.TypeParameter",
      "com.github.javaparser.ast.expr.Expression",
      "com.github.javaparser.ast.expr.BinaryExpr",
      "com.github.javaparser.ast.expr.LiteralExpr",
      "com.github.javaparser.ast.expr.BooleanLiteralExpr",
      "com.github.javaparser.ast.expr.MethodCallExpr",
      "com.github.javaparser.ast.stmt.AssertStmt",
      "com.github.javaparser.ast.ArrayCreationLevel",
      "com.github.javaparser.ast.expr.AnnotationExpr",
      "com.github.javaparser.ast.expr.NormalAnnotationExpr",
      "com.github.javaparser.TokenRange",
      "com.google.common.primitives.Ints",
      "com.github.javaparser.ast.stmt.BreakStmt",
      "com.github.javaparser.ast.expr.LiteralStringValueExpr",
      "com.github.javaparser.ast.expr.CharLiteralExpr",
      "com.github.javaparser.utils.StringEscapeUtils$CharSequenceTranslator",
      "com.github.javaparser.utils.StringEscapeUtils$AggregateTranslator",
      "com.github.javaparser.utils.StringEscapeUtils$LookupTranslator",
      "com.github.javaparser.utils.StringEscapeUtils$OctalUnescaper",
      "com.github.javaparser.utils.StringEscapeUtils$UnicodeUnescaper",
      "com.github.javaparser.utils.StringEscapeUtils",
      "com.github.javaparser.printer.PrettyPrintVisitor",
      "com.github.javaparser.printer.SourcePrinter",
      "com.google.common.collect.EmptyImmutableSet",
      "com.github.javaparser.ast.visitor.ObjectIdentityHashCodeVisitor",
      "com.github.javaparser.ast.expr.NullLiteralExpr",
      "com.github.javaparser.TokenRange$1",
      "com.github.javaparser.ast.visitor.HashCodeVisitor",
      "com.google.common.collect.ImmutableCollection$Builder",
      "com.google.common.collect.ImmutableList$Builder",
      "com.google.common.collect.RegularImmutableSortedMap",
      "com.google.common.collect.RegularImmutableSortedSet",
      "com.google.common.collect.RegularImmutableList",
      "com.google.common.collect.ObjectArrays",
      "com.google.common.collect.Platform",
      "com.google.common.collect.SortedLists$KeyPresentBehavior",
      "com.google.common.collect.SortedLists$KeyAbsentBehavior",
      "com.google.common.collect.SortedLists",
      "com.google.common.collect.SingletonImmutableList",
      "com.github.javaparser.ast.stmt.LabeledStmt",
      "com.github.javaparser.ast.stmt.ReturnStmt",
      "com.github.javaparser.ast.expr.ThisExpr",
      "com.github.javaparser.ast.type.UnknownType",
      "com.github.javaparser.ast.type.ClassOrInterfaceType",
      "net.mooctest.FibonacciHeap$Entry",
      "com.google.common.base.Present"
    );
  }
}
