/*
 * This file was automatically generated by EvoSuite
 * Sat Nov 30 05:46:49 GMT 2019
 */

package net.mooctest;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.shaded.org.mockito.Mockito.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.util.LinkedList;
import java.util.List;
import net.mooctest.Edge;
import net.mooctest.ExclusiveEdge;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.ViolatedAssumptionAnswer;
import org.junit.runner.RunWith;

public class ExclusiveEdgeTest {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      ExclusiveEdge<Object> exclusiveEdge0 = ExclusiveEdge.of((Edge<Object>) null, 0.0);
      LinkedList<Edge<Object>> linkedList0 = new LinkedList<Edge<Object>>();
      ExclusiveEdge<Object> exclusiveEdge1 = ExclusiveEdge.of((Edge<Object>) null, (List<Edge<Object>>) linkedList0, 1778.09684);
      int int0 = exclusiveEdge1.compareTo(exclusiveEdge0);
      assertEquals(1, int0);
      assertEquals(0.0, exclusiveEdge0.weight, 0.01);
  }

  @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      ExclusiveEdge<String> exclusiveEdge0 = ExclusiveEdge.of((Edge<String>) null, (-437.332736));
      ExclusiveEdge<String> exclusiveEdge1 = ExclusiveEdge.of((Edge<String>) null, (-2052.0184332337));
      int int0 = exclusiveEdge1.compareTo(exclusiveEdge0);
      assertEquals((-1), int0);
  }

  @Test(timeout = 4000)
  public void test2()  throws Throwable  {
      ExclusiveEdge<Integer> exclusiveEdge0 = ExclusiveEdge.of((Edge<Integer>) null, (-437.332736));
      // Undeclared exception!
      try { 
        exclusiveEdge0.compareTo((ExclusiveEdge<Integer>) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("net.mooctest.ExclusiveEdge", e);
      }
  }

  @Test(timeout = 4000)
  public void test3()  throws Throwable  {
      Edge<Object> edge0 = (Edge<Object>) mock(Edge.class, new ViolatedAssumptionAnswer());
      LinkedList<Edge<Object>> linkedList0 = new LinkedList<Edge<Object>>();
      ExclusiveEdge<Object> exclusiveEdge0 = ExclusiveEdge.of(edge0, (List<Edge<Object>>) linkedList0, (-1785.9366840895589));
      int int0 = exclusiveEdge0.compareTo(exclusiveEdge0);
      assertEquals((-1785.9366840895589), exclusiveEdge0.weight, 0.01);
      assertEquals(0, int0);
  }
}
