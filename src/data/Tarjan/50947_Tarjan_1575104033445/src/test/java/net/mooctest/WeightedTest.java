/*
 * This file was automatically generated by EvoSuite
 * Sat Nov 30 05:43:34 GMT 2019
 */

package net.mooctest;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import net.mooctest.Weighted;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

public class WeightedTest {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      Weighted<String> weighted0 = Weighted.weighted("val", 1494.0);
      Weighted<Weighted<String>> weighted1 = new Weighted<Weighted<String>>(weighted0, (-722.690829));
      Weighted<Weighted<String>> weighted2 = new Weighted<Weighted<String>>(weighted0, (-3972.764125));
      int int0 = weighted2.compareTo(weighted1);
      assertEquals(1494.0, weighted0.weight, 0.01);
      assertEquals(1, int0);
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      Weighted<String> weighted0 = new Weighted<String>("", 0.0);
      Weighted<String> weighted1 = Weighted.weighted("f05*", (-2987.28308738934));
      int int0 = weighted0.compareTo(weighted1);
      assertEquals((-1), int0);
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      // Undeclared exception!
      try { 
        Weighted.weighted((Integer) null, (double) (-1));
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      Weighted<String> weighted0 = new Weighted<String>("", 0.0);
      Weighted<Object> weighted1 = new Weighted<Object>(weighted0, (-1));
      // Undeclared exception!
      try { 
        weighted1.compareTo((Weighted<Object>) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("net.mooctest.Weighted", e);
      }
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      Weighted<String> weighted0 = null;
      try {
        weighted0 = new Weighted<String>((String) null, (-1.0));
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      Weighted<String> weighted0 = new Weighted<String>("WLT", (-2325.9));
      Weighted<String> weighted1 = new Weighted<String>("WLT", 2499.7632518738374);
      boolean boolean0 = weighted1.equals(weighted0);
      assertFalse(boolean0);
      assertEquals(2499.7632518738374, weighted1.weight, 0.01);
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      Weighted<String> weighted0 = new Weighted<String>("WLT", (-2325.9));
      boolean boolean0 = weighted0.equals(weighted0);
      assertEquals((-2325.9), weighted0.weight, 0.01);
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      Weighted<String> weighted0 = new Weighted<String>("", 0.0);
      boolean boolean0 = weighted0.equals("");
      assertFalse(boolean0);
      assertEquals(0.0, weighted0.weight, 0.01);
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      Weighted<String> weighted0 = Weighted.weighted("val", 1494.0);
      Object object0 = new Object();
      Weighted<Object> weighted1 = Weighted.weighted(object0, (-722.690829));
      boolean boolean0 = weighted1.equals(weighted0);
      assertFalse(boolean0);
      assertEquals((-722.690829), weighted1.weight, 0.01);
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      Weighted<String> weighted0 = Weighted.weighted("val", 1494.0);
      String string0 = weighted0.toString();
      assertEquals("Weighted{val=val, weight=1494.0}", string0);
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      Weighted<String> weighted0 = Weighted.weighted("val", 1494.0);
      Weighted<Weighted<String>> weighted1 = new Weighted<Weighted<String>>(weighted0, (-722.690829));
      weighted1.hashCode();
      assertEquals(1494.0, weighted0.weight, 0.01);
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      Integer integer0 = new Integer(1);
      Weighted<Integer> weighted0 = Weighted.weighted(integer0, (-1.0));
      int int0 = weighted0.compareTo(weighted0);
      assertEquals((-1.0), weighted0.weight, 0.01);
      assertEquals(0, int0);
  }
}
