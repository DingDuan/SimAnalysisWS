/*
 * This file was automatically generated by EvoSuite
 * Sat Nov 30 05:07:33 GMT 2019
 */

package net.mooctest;

import org.junit.Test;
import static org.junit.Assert.*;
import java.util.Collection;
import java.util.EnumSet;
import java.util.LinkedHashSet;
import java.util.Locale;
import java.util.PriorityQueue;
import java.util.SortedSet;
import java.util.TreeSet;
import java.util.Vector;
import net.mooctest.DenseWeightedGraph;
import net.mooctest.Edge;
import net.mooctest.Weighted;
import org.junit.runner.RunWith;

public class DenseWeightedGraph_ESTest {
 
  @Test(timeout = 1000)
  public void test82d56705_1b68_4327_8995_b52c6c4f6f9300()  throws Throwable  {
      double[][] doubleArray0 = new double[3][2];
      DenseWeightedGraph<Integer> denseWeightedGraph0 = DenseWeightedGraph.from(doubleArray0);
      Integer integer0 = new Integer(1);
      Integer integer1 = new Integer(1);
      double double0 = denseWeightedGraph0.getWeightOf(integer1, integer0);
      assertEquals(0.0, double0, 0.01);
  }

  @Test(timeout = 1000)
  public void test022e6d02_4c1c_451d_a6ba_ac1c3b3ab2d101()  throws Throwable  {
      double[][] doubleArray0 = new double[0][0];
      Locale.FilteringMode locale_FilteringMode0 = Locale.FilteringMode.MAP_EXTENDED_RANGES;
      EnumSet<Locale.FilteringMode> enumSet0 = EnumSet.of(locale_FilteringMode0, locale_FilteringMode0, locale_FilteringMode0, locale_FilteringMode0);
      // Undeclared exception!
      try { 
        DenseWeightedGraph.from((Iterable<Locale.FilteringMode>) enumSet0, doubleArray0);
      
      } catch(IllegalArgumentException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         assertTrue(e instanceof IllegalArgumentException);
      }
  }

  @Test(timeout = 1000)
  public void test26e0e0ab_9bef_468e_a880_0d8d4526138d02()  throws Throwable  {
      double[][] doubleArray0 = new double[3][2];
      double[] doubleArray1 = new double[3];
      doubleArray1[1] = 1.0;
      doubleArray0[1] = doubleArray1;
      DenseWeightedGraph<Integer> denseWeightedGraph0 = DenseWeightedGraph.from(doubleArray0);
      Integer integer0 = new Integer(1);
      double double0 = denseWeightedGraph0.getWeightOf(integer0, integer0);
      assertEquals(1.0, double0, 0.01);
  }

  @Test(timeout = 1000)
  public void testb612083e_cb56_4cbc_8b19_9fc5ec74343b03()  throws Throwable  {
      double[][] doubleArray0 = new double[3][2];
      double[] doubleArray1 = new double[0];
      doubleArray0[1] = doubleArray1;
      DenseWeightedGraph<Integer> denseWeightedGraph0 = DenseWeightedGraph.from(doubleArray0);
      Integer integer0 = new Integer(1);
      // Undeclared exception!
      try { 
        denseWeightedGraph0.getWeightOf(integer0, integer0);
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 1
         //
         assertTrue(e instanceof ArrayIndexOutOfBoundsException);
      }
  }

  @Test(timeout = 1000)
  public void test5f04f466_7a27_4ad5_adcb_22c3ac122eb804()  throws Throwable  {
      double[][] doubleArray0 = new double[2][2];
      double[] doubleArray1 = new double[1];
      doubleArray0[1] = doubleArray1;
      DenseWeightedGraph<Integer> denseWeightedGraph0 = DenseWeightedGraph.from(doubleArray0);
      Integer integer0 = new Integer(1);
      // Undeclared exception!
      try { 
        denseWeightedGraph0.getIncomingEdges(integer0);
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 1
         //
         assertTrue(e instanceof ArrayIndexOutOfBoundsException);
      }
  }

  @Test(timeout = 1000)
  public void testcf26b480_5cc5_4479_b711_e1e2e8969c4205()  throws Throwable  {
      // Undeclared exception!
      try { 
        DenseWeightedGraph.from((double[][]) null);
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         assertTrue(e instanceof NullPointerException);
      }
  }

  @Test(timeout = 1000)
  public void test6dcda77d_41e1_41a1_ab7b_baa7a14d569706()  throws Throwable  {
      PriorityQueue<Integer> priorityQueue0 = new PriorityQueue<Integer>();
      // Undeclared exception!
      try { 
        DenseWeightedGraph.from((Iterable<Integer>) priorityQueue0, (double[][]) null);
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         assertTrue(e instanceof NullPointerException);
      }
  }

  @Test(timeout = 1000)
  public void test28603b01_e07a_4aa6_8ea8_341be85e035e07()  throws Throwable  {
      double[][] doubleArray0 = new double[5][6];
      // Undeclared exception!
      try { 
        DenseWeightedGraph.from((Iterable<String>) null, doubleArray0);
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         assertTrue(e instanceof NullPointerException);
      }
  }

  @Test(timeout = 1000)
  public void test61d4ab3f_db8e_425c_bfbd_27da67aab5bd08()  throws Throwable  {
      double[][] doubleArray0 = new double[2][2];
      DenseWeightedGraph<Integer> denseWeightedGraph0 = DenseWeightedGraph.from(doubleArray0);
      Integer integer0 = new Integer(1);
      Collection<Weighted<Edge<Integer>>> collection0 = denseWeightedGraph0.getIncomingEdges(integer0);
      assertNotNull(collection0);
  }

  @Test(timeout = 1000)
  public void test86911bad_8db4_4652_b75c_2810bf7c024f09()  throws Throwable  {
      TreeSet<Locale.FilteringMode> treeSet0 = new TreeSet<Locale.FilteringMode>();
      PriorityQueue<Locale.FilteringMode> priorityQueue0 = new PriorityQueue<Locale.FilteringMode>((SortedSet<? extends Locale.FilteringMode>) treeSet0);
      double[][] doubleArray0 = new double[1][0];
      Locale.FilteringMode locale_FilteringMode0 = Locale.FilteringMode.IGNORE_EXTENDED_RANGES;
      priorityQueue0.add(locale_FilteringMode0);
      DenseWeightedGraph<Locale.FilteringMode> denseWeightedGraph0 = DenseWeightedGraph.from((Iterable<Locale.FilteringMode>) priorityQueue0, doubleArray0);
      assertNotNull(denseWeightedGraph0);
  }

  @Test(timeout = 1000)
  public void testa234a49c_1958_4f01_a761_d541b33104b210()  throws Throwable  {
      double[][] doubleArray0 = new double[1][1];
      DenseWeightedGraph<Integer> denseWeightedGraph0 = DenseWeightedGraph.from(doubleArray0);
      Collection<Integer> collection0 = denseWeightedGraph0.getNodes();
      assertNotNull(collection0);
  }

  @Test(timeout = 1000)
  public void test4617c215_c7a3_44da_a8d5_0931935d843411()  throws Throwable  {
      double[][] doubleArray0 = new double[3][2];
      DenseWeightedGraph<Integer> denseWeightedGraph0 = DenseWeightedGraph.from(doubleArray0);
      Collection<Weighted<Edge<Integer>>> collection0 = denseWeightedGraph0.getIncomingEdges((Integer) null);
      assertNotNull(collection0);
  }

  @Test(timeout = 1000)
  public void test35e6c0ad_ecf2_4e47_8ea7_cff4762050c612()  throws Throwable  {
      double[][] doubleArray0 = new double[9][2];
      DenseWeightedGraph<Integer> denseWeightedGraph0 = DenseWeightedGraph.from(doubleArray0);
      Integer integer0 = new Integer(5);
      Integer integer1 = new Integer((-1070));
      double double0 = denseWeightedGraph0.getWeightOf(integer0, integer1);
      assertEquals(Double.NEGATIVE_INFINITY, double0, 0.01);
  }

  @Test(timeout = 1000)
  public void test5f111d63_32ff_444e_b2ec_e73b9ac507a113()  throws Throwable  {
      Vector<Integer> vector0 = new Vector<Integer>();
      double[][] doubleArray0 = new double[0][5];
      DenseWeightedGraph<Integer> denseWeightedGraph0 = DenseWeightedGraph.from((Iterable<Integer>) vector0, doubleArray0);
      Integer integer0 = new Integer(159);
      double double0 = denseWeightedGraph0.getWeightOf(integer0, integer0);
      assertEquals(Double.NEGATIVE_INFINITY, double0, 0.01);
  }

  @Test(timeout = 1000)
  public void testd42ca875_3656_4d47_a129_c77a8b9395e114()  throws Throwable  {
      LinkedHashSet<Object> linkedHashSet0 = new LinkedHashSet<Object>();
      double[][] doubleArray0 = new double[5][3];
      // Undeclared exception!
      try { 
        DenseWeightedGraph.from((Iterable<Object>) linkedHashSet0, doubleArray0);
      
      } catch(IllegalArgumentException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         assertTrue(e instanceof IllegalArgumentException);
      }
  }
}
