/*
 * This file was automatically generated by EvoSuite
 * Sat Nov 30 05:18:43 GMT 2019
 */

package net.mooctest;

import org.junit.Test;
import static org.junit.Assert.*;
import java.util.Comparator;
import java.util.Iterator;
import net.mooctest.FibonacciHeap;
import net.mooctest.FibonacciQueue;
import org.junit.runner.RunWith;

public class FibonacciQueue_ESTest {
 


  @Test(timeout = 1000)
  public void testc5eea0a2_4c9f_45ea_ab30_90289242cc051()  throws Throwable  {
      FibonacciQueue<Integer> fibonacciQueue0 = FibonacciQueue.create();
      Integer integer0 = new Integer((-369));
      fibonacciQueue0.offer(integer0);
      int int0 = fibonacciQueue0.size();
      assertEquals(1, int0);
  }


  @Test(timeout = 1000)
  public void testf57eaea1_4fcc_4f34_ace8_1add6187b88c5()  throws Throwable  {
      // Undeclared exception!
      try { 
        FibonacciQueue.create((Comparator<? super FibonacciHeap.Entry>) null);
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         assertTrue(e instanceof NullPointerException);
      }
  }

  @Test(timeout = 1000)
  public void test8bbb1a77_781e_4def_950b_2da238cea31e9()  throws Throwable  {
      FibonacciQueue<String> fibonacciQueue0 = FibonacciQueue.create();
      String string0 = fibonacciQueue0.poll();
      assertNull(string0);
  }
}
