/*
 * This file was automatically generated by EvoSuite
 * Sat Nov 30 05:15:20 GMT 2019
 */

package net.mooctest;

import org.junit.Test;
import static org.junit.Assert.*;
import com.google.common.base.Predicate;
import java.util.LinkedHashSet;
import java.util.Set;
import net.mooctest.Edge;
import org.junit.runner.RunWith;

public class Edge_ESTest {
 
  @Test(timeout = 1000)
  public void test50f6598c_6ee9_4b20_833a_a156686db0d500()  throws Throwable  {
      Edge<String> edge0 = new Edge<String>("m_IJ^NzC(N<s?>7lR-", "net.mooctest.Edge$EdgeBuilder");
      String string0 = edge0.toString();
      assertEquals("Edge{source=m_IJ^NzC(N<s?>7lR-, destination=net.mooctest.Edge$EdgeBuilder}", string0);
  }

  @Test(timeout = 1000)
  public void test46dd3842_9ee8_4062_a46d_b7fbf615ca4f01()  throws Throwable  {
      Integer integer0 = new Integer((-1121));
      Edge<Integer> edge0 = new Edge<Integer>(integer0, integer0);
      edge0.hashCode();
  }

  @Test(timeout = 1000)
  public void test57b23b1d_9c30_42ce_ac21_441551d04d8c02()  throws Throwable  {
      // Undeclared exception!
      try { 
        Edge.competesWith((Set<Edge<Edge<Integer>>>) null);
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         assertTrue(e instanceof NullPointerException);
      }
  }

  @Test(timeout = 1000)
  public void test663704ef_ff2f_4637_9c70_e5d15ede149803()  throws Throwable  {
      LinkedHashSet<Edge<String>> linkedHashSet0 = new LinkedHashSet<Edge<String>>();
      Edge<String> edge0 = new Edge<String>("", (String) null);
      linkedHashSet0.add(edge0);
      // Undeclared exception!
      try { 
        Edge.competesWith((Set<Edge<String>>) linkedHashSet0);
      
      } catch(NullPointerException e) {
         //
         // null key in entry: null=
         //
         assertTrue(e instanceof NullPointerException);
      }
  }

  @Test(timeout = 1000)
  public void test899d83aa_09b3_413c_b8c2_a16fd9fc61bd04()  throws Throwable  {
      Integer integer0 = new Integer((-1122));
      LinkedHashSet<Edge<Integer>> linkedHashSet0 = new LinkedHashSet<Edge<Integer>>();
      Integer integer1 = new Integer((-1122));
      Edge<Integer> edge0 = new Edge<Integer>(integer1, integer0);
      linkedHashSet0.add(edge0);
      Edge<Integer> edge1 = new Edge<Integer>(integer0, integer0);
      linkedHashSet0.add(edge1);
      // Undeclared exception!
      try { 
        Edge.competesWith((Set<Edge<Integer>>) linkedHashSet0);
      
      } catch(IllegalArgumentException e) {
         //
         // duplicate key: -1122
         //
         assertTrue(e instanceof IllegalArgumentException);
      }
  }

  @Test(timeout = 1000)
  public void test9a5c60ec_40c4_451e_8dea_1a2f1d638c3305()  throws Throwable  {
      Integer integer0 = new Integer(0);
      Edge.EdgeBuilder<Object> edge_EdgeBuilder0 = Edge.from((Object) integer0);
      Edge<Object> edge0 = edge_EdgeBuilder0.to("4&'.(ZjaMq");
      Edge.EdgeBuilder<Object> edge_EdgeBuilder1 = Edge.from((Object) edge0);
      Edge edge1 = (Edge)edge_EdgeBuilder1.source;
      boolean boolean0 = edge0.equals(edge1);
      assertTrue(boolean0);
  }

  @Test(timeout = 1000)
  public void testcc0e8ae9_b465_4d29_8074_15cb24de373606()  throws Throwable  {
      Integer integer0 = new Integer(0);
      Edge<Integer> edge0 = new Edge<Integer>(integer0, integer0);
      Edge.EdgeBuilder<String> edge_EdgeBuilder0 = Edge.from("");
      Edge<String> edge1 = edge_EdgeBuilder0.to("");
      Edge<Object> edge2 = new Edge<Object>("", edge0);
      boolean boolean0 = edge1.equals(edge2);
      assertFalse(boolean0);
  }

  @Test(timeout = 1000)
  public void testf2c08810_838a_4aec_8e47_824764a07b4707()  throws Throwable  {
      Integer integer0 = new Integer(0);
      Edge<Integer> edge0 = new Edge<Integer>(integer0, integer0);
      Edge<Object> edge1 = new Edge<Object>("", edge0);
      boolean boolean0 = edge1.equals(integer0);
      assertFalse(boolean0);
  }

  @Test(timeout = 1000)
  public void teste6aacec4_db92_4778_b97b_66c9289bcf2a08()  throws Throwable  {
      Integer integer0 = new Integer(0);
      Edge<Integer> edge0 = new Edge<Integer>(integer0, integer0);
      Edge<Object> edge1 = new Edge<Object>("", edge0);
      boolean boolean0 = edge1.equals(edge0);
      assertFalse(boolean0);
  }

  @Test(timeout = 1000)
  public void test5c1e8cf4_cdea_40df_8536_17b92ba43ad909()  throws Throwable  {
      LinkedHashSet<Edge<Integer>> linkedHashSet0 = new LinkedHashSet<Edge<Integer>>();
      Predicate<Edge<Integer>> predicate0 = Edge.competesWith((Set<Edge<Integer>>) linkedHashSet0);
      assertNotNull(predicate0);
  }

  @Test(timeout = 1000)
  public void test56ae1dab_623b_4af1_bfe8_a75bb0b494fc10()  throws Throwable  {
      Predicate<Edge<Integer>> predicate0 = Edge.isAutoCycle();
      assertNotNull(predicate0);
  }

  @Test(timeout = 1000)
  public void test0ec0efe0_06ff_4df2_8489_d3fce6db771811()  throws Throwable  {
      LinkedHashSet<Edge<Integer>> linkedHashSet0 = new LinkedHashSet<Edge<Integer>>();
      Predicate<Edge<Integer>> predicate0 = Edge.isIn((Set<Edge<Integer>>) linkedHashSet0);
      assertNotNull(predicate0);
  }

  @Test(timeout = 1000)
  public void test81faf1e2_df97_4822_8c37_bf1b6704901412()  throws Throwable  {
      Integer integer0 = new Integer(0);
      Predicate<Edge<Object>> predicate0 = Edge.hasDestination((Object) integer0);
      assertNotNull(predicate0);
  }

  @Test(timeout = 1000)
  public void test0f0712c7_8b64_4df3_b638_c7db7966c64513()  throws Throwable  {
      Integer integer0 = new Integer(0);
      Edge.EdgeBuilder<Object> edge_EdgeBuilder0 = Edge.from((Object) integer0);
      Edge<Object> edge0 = edge_EdgeBuilder0.to("4&'.(ZjaMq");
      boolean boolean0 = edge0.equals((Object) null);
      assertFalse(boolean0);
  }
}
