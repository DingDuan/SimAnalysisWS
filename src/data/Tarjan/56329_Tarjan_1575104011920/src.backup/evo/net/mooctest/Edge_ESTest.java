/*
 * This file was automatically generated by EvoSuite
 * Sat Nov 30 05:15:20 GMT 2019
 */

package net.mooctest;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import com.google.common.base.Predicate;
import java.util.LinkedHashSet;
import java.util.Set;
import net.mooctest.Edge;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class Edge_ESTest extends Edge_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      Edge<String> edge0 = new Edge<String>("m_IJ^NzC(N<s?>7lR-", "net.mooctest.Edge$EdgeBuilder");
      String string0 = edge0.toString();
      assertEquals("Edge{source=m_IJ^NzC(N<s?>7lR-, destination=net.mooctest.Edge$EdgeBuilder}", string0);
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      Integer integer0 = new Integer((-1121));
      Edge<Integer> edge0 = new Edge<Integer>(integer0, integer0);
      edge0.hashCode();
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      // Undeclared exception!
      try { 
        Edge.competesWith((Set<Edge<Edge<Integer>>>) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("net.mooctest.Edge", e);
      }
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      LinkedHashSet<Edge<String>> linkedHashSet0 = new LinkedHashSet<Edge<String>>();
      Edge<String> edge0 = new Edge<String>("", (String) null);
      linkedHashSet0.add(edge0);
      // Undeclared exception!
      try { 
        Edge.competesWith((Set<Edge<String>>) linkedHashSet0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // null key in entry: null=
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      Integer integer0 = new Integer((-1122));
      LinkedHashSet<Edge<Integer>> linkedHashSet0 = new LinkedHashSet<Edge<Integer>>();
      Integer integer1 = new Integer((-1122));
      Edge<Integer> edge0 = new Edge<Integer>(integer1, integer0);
      linkedHashSet0.add(edge0);
      Edge<Integer> edge1 = new Edge<Integer>(integer0, integer0);
      linkedHashSet0.add(edge1);
      // Undeclared exception!
      try { 
        Edge.competesWith((Set<Edge<Integer>>) linkedHashSet0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // duplicate key: -1122
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      Integer integer0 = new Integer(0);
      Edge.EdgeBuilder<Object> edge_EdgeBuilder0 = Edge.from((Object) integer0);
      Edge<Object> edge0 = edge_EdgeBuilder0.to("4&'.(ZjaMq");
      Edge.EdgeBuilder<Object> edge_EdgeBuilder1 = Edge.from((Object) edge0);
      Edge edge1 = (Edge)edge_EdgeBuilder1.source;
      boolean boolean0 = edge0.equals(edge1);
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      Integer integer0 = new Integer(0);
      Edge<Integer> edge0 = new Edge<Integer>(integer0, integer0);
      Edge.EdgeBuilder<String> edge_EdgeBuilder0 = Edge.from("");
      Edge<String> edge1 = edge_EdgeBuilder0.to("");
      Edge<Object> edge2 = new Edge<Object>("", edge0);
      boolean boolean0 = edge1.equals(edge2);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      Integer integer0 = new Integer(0);
      Edge<Integer> edge0 = new Edge<Integer>(integer0, integer0);
      Edge<Object> edge1 = new Edge<Object>("", edge0);
      boolean boolean0 = edge1.equals(integer0);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      Integer integer0 = new Integer(0);
      Edge<Integer> edge0 = new Edge<Integer>(integer0, integer0);
      Edge<Object> edge1 = new Edge<Object>("", edge0);
      boolean boolean0 = edge1.equals(edge0);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      LinkedHashSet<Edge<Integer>> linkedHashSet0 = new LinkedHashSet<Edge<Integer>>();
      Predicate<Edge<Integer>> predicate0 = Edge.competesWith((Set<Edge<Integer>>) linkedHashSet0);
      assertNotNull(predicate0);
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      Predicate<Edge<Integer>> predicate0 = Edge.isAutoCycle();
      assertNotNull(predicate0);
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      LinkedHashSet<Edge<Integer>> linkedHashSet0 = new LinkedHashSet<Edge<Integer>>();
      Predicate<Edge<Integer>> predicate0 = Edge.isIn((Set<Edge<Integer>>) linkedHashSet0);
      assertNotNull(predicate0);
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      Integer integer0 = new Integer(0);
      Predicate<Edge<Object>> predicate0 = Edge.hasDestination((Object) integer0);
      assertNotNull(predicate0);
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      Integer integer0 = new Integer(0);
      Edge.EdgeBuilder<Object> edge_EdgeBuilder0 = Edge.from((Object) integer0);
      Edge<Object> edge0 = edge_EdgeBuilder0.to("4&'.(ZjaMq");
      boolean boolean0 = edge0.equals((Object) null);
      assertFalse(boolean0);
  }
}
