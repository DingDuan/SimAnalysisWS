/*
 * This file was automatically generated by EvoSuite
 * Sat Nov 30 05:19:03 GMT 2019
 */

package net.mooctest;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.shaded.org.mockito.Mockito.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.util.List;
import net.mooctest.Edge;
import net.mooctest.ExclusiveEdge;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.ViolatedAssumptionAnswer;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class ExclusiveEdge_ESTest extends ExclusiveEdge_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      Edge<String> edge0 = (Edge<String>) mock(Edge.class, new ViolatedAssumptionAnswer());
      ExclusiveEdge<String> exclusiveEdge0 = ExclusiveEdge.of(edge0, 1.0);
      ExclusiveEdge<String> exclusiveEdge1 = ExclusiveEdge.of(exclusiveEdge0.edge, (List<Edge<String>>) null, (-1823.4991559));
      int int0 = exclusiveEdge0.compareTo(exclusiveEdge1);
      assertEquals(1, int0);
      assertEquals(1.0, exclusiveEdge0.weight, 0.01);
  }

  @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      Edge<String> edge0 = (Edge<String>) mock(Edge.class, new ViolatedAssumptionAnswer());
      ExclusiveEdge<String> exclusiveEdge0 = ExclusiveEdge.of(edge0, 1.0);
      ExclusiveEdge<String> exclusiveEdge1 = ExclusiveEdge.of(exclusiveEdge0.edge, (List<Edge<String>>) null, (-1823.4991559));
      int int0 = exclusiveEdge1.compareTo(exclusiveEdge0);
      assertEquals((-1), int0);
      assertEquals(1.0, exclusiveEdge0.weight, 0.01);
  }

  @Test(timeout = 4000)
  public void test2()  throws Throwable  {
      Edge<String> edge0 = (Edge<String>) mock(Edge.class, new ViolatedAssumptionAnswer());
      ExclusiveEdge<String> exclusiveEdge0 = ExclusiveEdge.of(edge0, 1.0);
      ExclusiveEdge<Object> exclusiveEdge1 = ExclusiveEdge.of((Edge<Object>) exclusiveEdge0.edge, (List<Edge<Object>>) null, 0.0);
      // Undeclared exception!
      try { 
        exclusiveEdge1.compareTo((ExclusiveEdge<Object>) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("net.mooctest.ExclusiveEdge", e);
      }
  }

  @Test(timeout = 4000)
  public void test3()  throws Throwable  {
      Edge<String> edge0 = (Edge<String>) mock(Edge.class, new ViolatedAssumptionAnswer());
      ExclusiveEdge<String> exclusiveEdge0 = ExclusiveEdge.of(edge0, 1.0);
      int int0 = exclusiveEdge0.compareTo(exclusiveEdge0);
      assertEquals(0, int0);
      assertEquals(1.0, exclusiveEdge0.weight, 0.01);
  }
}
