/*
 * This file was automatically generated by EvoSuite
 * Sat Nov 30 08:19:32 GMT 2019
 */

package net.mooctest;

import org.junit.Test;
import static org.junit.Assert.*;
import java.util.Collection;
import java.util.EnumSet;
import java.util.LinkedHashSet;
import java.util.LinkedList;
import java.util.Locale;

public class DenseWeightedGraphTest {

    @Test(timeout = 4000)
    public void test00()  throws Throwable  {
        double[][] doubleArray0 = new double[2][2];
        Class<Locale.Category> class0 = Locale.Category.class;
        EnumSet<Locale.Category> enumSet0 = EnumSet.allOf(class0);
        DenseWeightedGraph<Locale.Category> denseWeightedGraph0 = DenseWeightedGraph.from((Iterable<Locale.Category>) enumSet0, doubleArray0);
        Locale.Category locale_Category0 = Locale.Category.FORMAT;
        Locale.Category locale_Category1 = Locale.Category.DISPLAY;
        double double0 = denseWeightedGraph0.getWeightOf(locale_Category0, locale_Category1);
        assertEquals(0.0, double0, 0.01);
    }

    @Test(timeout = 4000)
    public void test01()  throws Throwable  {
        double[][] doubleArray0 = new double[0][9];
        Integer integer0 = new Integer(1971);
        LinkedHashSet<Object> linkedHashSet0 = new LinkedHashSet<Object>(0, 2599.93F);
        Weighted<Integer> weighted0 = Weighted.weighted(integer0, 0.0);
        linkedHashSet0.add(weighted0);
        // Undeclared exception!
        try {
            DenseWeightedGraph.from((Iterable<Object>) linkedHashSet0, doubleArray0);
            fail("Expecting exception: IllegalArgumentException");

        } catch(IllegalArgumentException e) {
            //
            // no message in exception (getMessage() returned null)
            //
        }
    }

    @Test(timeout = 4000)
    public void test02()  throws Throwable  {
        double[][] doubleArray0 = new double[2][2];
        double[] doubleArray1 = new double[8];
        doubleArray1[0] = 1.0;
        doubleArray0[0] = doubleArray1;
        Class<Locale.Category> class0 = Locale.Category.class;
        EnumSet<Locale.Category> enumSet0 = EnumSet.allOf(class0);
        DenseWeightedGraph<Locale.Category> denseWeightedGraph0 = DenseWeightedGraph.from((Iterable<Locale.Category>) enumSet0, doubleArray0);
        Locale.Category locale_Category0 = Locale.Category.DISPLAY;
        double double0 = denseWeightedGraph0.getWeightOf(locale_Category0, locale_Category0);
        assertEquals(1.0, double0, 0.01);
    }

    @Test(timeout = 4000)
    public void test03()  throws Throwable  {
        double[][] doubleArray0 = new double[8][2];
        DenseWeightedGraph<Integer> denseWeightedGraph0 = DenseWeightedGraph.from(doubleArray0);
        Integer integer0 = new Integer(5);
        // Undeclared exception!
        try {
            denseWeightedGraph0.getWeightOf(integer0, integer0);
            fail("Expecting exception: ArrayIndexOutOfBoundsException");

        } catch(ArrayIndexOutOfBoundsException e) {
            //
            // 5
            //
        }
    }

    @Test(timeout = 4000)
    public void test04()  throws Throwable  {
        // Undeclared exception!
        try {
            DenseWeightedGraph.from((double[][]) null);
            fail("Expecting exception: NullPointerException");

        } catch(NullPointerException e) {
            //
            // no message in exception (getMessage() returned null)
            //

        }
    }

    @Test(timeout = 4000)
    public void test05()  throws Throwable  {
        LinkedHashSet<Locale.Category> linkedHashSet0 = new LinkedHashSet<Locale.Category>(1);
        // Undeclared exception!
        try {
            DenseWeightedGraph.from((Iterable<Locale.Category>) linkedHashSet0, (double[][]) null);
            fail("Expecting exception: NullPointerException");

        } catch(NullPointerException e) {
            //
            // no message in exception (getMessage() returned null)
            //

        }
    }

    @Test(timeout = 4000)
    public void test06()  throws Throwable  {
        double[][] doubleArray0 = new double[8][0];
        // Undeclared exception!
        try {
            DenseWeightedGraph.from((Iterable<Object>) null, doubleArray0);
            fail("Expecting exception: NullPointerException");

        } catch(NullPointerException e) {
            //
            // no message in exception (getMessage() returned null)
            //
        }
    }

    @Test(timeout = 4000)
    public void test07()  throws Throwable  {
        double[][] doubleArray0 = new double[2][2];
        Class<Locale.Category> class0 = Locale.Category.class;
        EnumSet<Locale.Category> enumSet0 = EnumSet.allOf(class0);
        DenseWeightedGraph<Locale.Category> denseWeightedGraph0 = DenseWeightedGraph.from((Iterable<Locale.Category>) enumSet0, doubleArray0);
        Locale.Category locale_Category0 = Locale.Category.DISPLAY;
        Collection<Weighted<Edge<Locale.Category>>> collection0 = denseWeightedGraph0.getIncomingEdges(locale_Category0);
        assertNotNull(collection0);
    }

    @Test(timeout = 4000)
    public void test08()  throws Throwable  {
        LinkedList<String> linkedList0 = new LinkedList<String>();
        double[][] doubleArray0 = new double[0][8];
        DenseWeightedGraph<String> denseWeightedGraph0 = DenseWeightedGraph.from((Iterable<String>) linkedList0, doubleArray0);
        Collection<Weighted<Edge<String>>> collection0 = denseWeightedGraph0.getIncomingEdges((String) null);
        assertNotNull(collection0);
    }

    @Test(timeout = 4000)
    public void test09()  throws Throwable  {
        double[][] doubleArray0 = new double[3][9];
        DenseWeightedGraph<Integer> denseWeightedGraph0 = DenseWeightedGraph.from(doubleArray0);
        Integer integer0 = new Integer(1);
        Integer integer1 = new Integer(8192);
        double double0 = denseWeightedGraph0.getWeightOf(integer0, integer1);
        assertEquals(Double.NEGATIVE_INFINITY, double0, 0.01);
    }

    @Test(timeout = 4000)
    public void test10()  throws Throwable  {
        LinkedList<String> linkedList0 = new LinkedList<String>();
        double[][] doubleArray0 = new double[0][8];
        DenseWeightedGraph<String> denseWeightedGraph0 = DenseWeightedGraph.from((Iterable<String>) linkedList0, doubleArray0);
        double double0 = denseWeightedGraph0.getWeightOf((String) null, "3j9OQ!n)&LdW~/n]");
        assertEquals(Double.NEGATIVE_INFINITY, double0, 0.01);
    }

    @Test(timeout = 4000)
    public void test11()  throws Throwable  {
        Locale.Category locale_Category0 = Locale.Category.FORMAT;
        EnumSet<Locale.Category> enumSet0 = EnumSet.of(locale_Category0, locale_Category0, locale_Category0, locale_Category0);
        double[][] doubleArray0 = new double[4][9];
        // Undeclared exception!
        try {
            DenseWeightedGraph.from((Iterable<Locale.Category>) enumSet0, doubleArray0);
            fail("Expecting exception: IllegalArgumentException");

        } catch(IllegalArgumentException e) {
            //
            // no message in exception (getMessage() returned null)
            //
        }
    }

    @Test(timeout = 4000)
    public void test12()  throws Throwable  {
        double[][] doubleArray0 = new double[0][1];
        Class<Locale.Category> class0 = Locale.Category.class;
        EnumSet<Locale.Category> enumSet0 = EnumSet.noneOf(class0);
        DenseWeightedGraph<Locale.Category> denseWeightedGraph0 = DenseWeightedGraph.from((Iterable<Locale.Category>) enumSet0, doubleArray0);
        Collection<Locale.Category> collection0 = denseWeightedGraph0.getNodes();
        assertNotNull(collection0);
    }
}
