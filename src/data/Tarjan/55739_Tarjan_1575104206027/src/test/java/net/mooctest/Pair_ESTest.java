/*
 * This file was automatically generated by EvoSuite
 * Sat Nov 30 06:27:22 GMT 2019
 */

package net.mooctest;

import org.junit.Test;
import static org.junit.Assert.*;

import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true)
public class Pair_ESTest {

  @Test(timeout = 4000)
  public void tes111111t0()  throws Throwable  {
      Integer integer0 = new Integer(0);
      Pair<Integer, Object> pair0 = new Pair<Integer, Object>(integer0, "S4YY-56Gfb;@x}y3o>]");
///      String string0 = pair0.toString();
     // assertEquals("Pair{first=0, second=S4YY-56Gfb;@x}y3o>]}", string0);
  }

  @Test(timeout = 4000)
  public void te111111st1()  throws Throwable  {
      Pair<Object, String> pair0 = new Pair<Object, String>("?ke{sZ", "?ke{sZ");
      Integer integer0 = new Integer(0);
      Pair<Pair<Object, String>, Integer> pair1 = new Pair<Pair<Object, String>, Integer>(pair0, integer0);
      pair1.hashCode();
  }

  @Test(timeout = 4000)
  public void tes111111t2()  throws Throwable  {
      Pair<Object, String> pair0 = new Pair<Object, String>("?ke{sZ", "?ke{sZ");
      Pair<String, Pair<Object, String>> pair1 = Pair.of("?ke{sZ", pair0);
      boolean boolean0 = pair1.equals(pair0);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void tes111111t3()  throws Throwable  {
      Pair<String, String> pair0 = Pair.of((String) null, (String) null);
      boolean boolean0 = pair0.equals((Object) null);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void tes111111t4()  throws Throwable  {
      Pair<String, Object> pair0 = new Pair<String, Object>("", "");
      Pair<Object, Object> pair1 = new Pair<Object, Object>("", pair0);
      boolean boolean0 = pair0.equals(pair1);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void te111111st5()  throws Throwable  {
      Pair<String, Object> pair0 = new Pair<String, Object>("", "");
      Pair<Object, String> pair1 = new Pair<Object, String>("", "");
      boolean boolean0 = pair0.equals(pair1);
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void tes111111t6()  throws Throwable  {
      Pair<String, Object> pair0 = new Pair<String, Object>("", "");
      Pair<Object, String> pair1 = Pair.of((Object) pair0, "");
      boolean boolean0 = pair1.equals(pair0);
      assertFalse(boolean0);
  }
    @Test(timeout = 4000)
    public void test0()  throws Throwable  {
        Integer integer0 = new Integer(1469);
        Pair<String, Integer> pair0 = new Pair<String, Integer>("upLP", integer0);
        boolean boolean0 = pair0.equals("upLP");
        assertFalse(boolean0);
    }

    @Test(timeout = 4000)
    public void test1()  throws Throwable  {
        Integer integer0 = new Integer(1469);
        Pair<Integer, Integer> pair0 = new Pair<Integer, Integer>(integer0, integer0);
        boolean boolean0 = pair0.equals(pair0);
        assertTrue(boolean0);
    }

    @Test(timeout = 4000)
    public void test2()  throws Throwable  {
        Integer integer0 = new Integer(1469);
        Pair<Integer, Object> pair0 = Pair.of(integer0, (Object) integer0);
        Object object0 = new Object();
        Pair<Object, Object> pair1 = new Pair<Object, Object>("upLP", object0);
        boolean boolean0 = pair0.equals(pair1);
        assertFalse(boolean0);
    }

    @Test(timeout = 4000)
    public void test3()  throws Throwable  {
        Integer integer0 = new Integer((-2757));
        Pair<String, Integer> pair0 = new Pair<String, Integer>("AC*Mo", integer0);
        Pair<String, String> pair1 = Pair.of("AC*Mo", "net.mooctest.Pair");
        Pair<Object, Object> pair2 = new Pair<Object, Object>("AC*Mo", pair1);
        boolean boolean0 = pair2.equals(pair0);
        assertFalse(boolean0);
    }

    @Test(timeout = 4000)
    public void test4()  throws Throwable  {
        Pair<String, Object> pair0 = Pair.of("AC*Mo", (Object) "Pair{first=AC*Mo, second=-2757}");
        pair0.hashCode();
    }

    @Test(timeout = 4000)
    public void test5()  throws Throwable  {
        Integer integer0 = new Integer((-2757));
        Pair<String, Integer> pair0 = new Pair<String, Integer>("AC*Mo", integer0);
        //String string0 = pair0.toString();
        //assertEquals("Pair{first=AC*Mo, second=-2757}", string0);
    }
}
