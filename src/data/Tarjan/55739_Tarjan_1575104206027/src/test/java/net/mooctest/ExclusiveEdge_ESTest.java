/*
 * This file was automatically generated by EvoSuite
 * Sat Nov 30 06:28:14 GMT 2019
 */

package net.mooctest;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.shaded.org.mockito.Mockito.*;
import static org.evosuite.runtime.EvoAssertions.*;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.ViolatedAssumptionAnswer;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true)
public class ExclusiveEdge_ESTest  {

    @Test(timeout = 4000)
    public void test0()  throws Throwable  {
        Edge<Object> edge0 = (Edge<Object>) mock(Edge.class, new ViolatedAssumptionAnswer());
        ExclusiveEdge<Object> exclusiveEdge0 = ExclusiveEdge.of(edge0, (-1336.98));
        ExclusiveEdge<Object> exclusiveEdge1 = ExclusiveEdge.of(exclusiveEdge0.edge, (-393.9801519623));
        int int0 = exclusiveEdge1.compareTo(exclusiveEdge0);
        assertEquals(1, int0);
    }

    @Test(timeout = 4000)
    public void test1()  throws Throwable  {
        Edge<Object> edge0 = (Edge<Object>) mock(Edge.class, new ViolatedAssumptionAnswer());
        ExclusiveEdge<Object> exclusiveEdge0 = ExclusiveEdge.of(edge0, (-1336.98));
        ExclusiveEdge<Object> exclusiveEdge1 = ExclusiveEdge.of(exclusiveEdge0.edge, (-393.9801519623));
        int int0 = exclusiveEdge0.compareTo(exclusiveEdge1);
        assertEquals((-1), int0);
    }

    @Test(timeout = 4000)
    public void test2()  throws Throwable  {
        Edge<String> edge0 = (Edge<String>) mock(Edge.class, new ViolatedAssumptionAnswer());
        ExclusiveEdge<String> exclusiveEdge0 = ExclusiveEdge.of(edge0, (-2755.554764071586));
        // Undeclared exception!
        try {
            exclusiveEdge0.compareTo((ExclusiveEdge<String>) null);
            fail("Expecting exception: NullPointerException");

        } catch(NullPointerException e) {
            //
            // no message in exception (getMessage() returned null)
            //
            verifyException("net.mooctest.ExclusiveEdge", e);
        }
    }

//  @Test(timeout = 4000)
//  public void test3()  throws Throwable  {
//      Edge<Object> edge0 = (Edge<Object>) mock(Edge.class, new ViolatedAssumptionAnswer());
//      ExclusiveEdge<Object> exclusiveEdge0 = ExclusiveEdge.of(edge0, (-1336.98));
//      ExclusiveEdge<String> exclusiveEdge1 = ExclusiveEdge.of((Edge<String>) exclusiveEdge0.edge, 0.0);
//      ExclusiveEdge<ExclusiveEdge<String>> exclusiveEdge2 = ExclusiveEdge.of((Edge<ExclusiveEdge<String>>) exclusiveEdge1.edge, 563.81782);
//      ExclusiveEdge.of((Edge<String>) exclusiveEdge2.edge, (List<Edge<String>>) null, (-1915.37297436322));
//      assertEquals(563.81782, exclusiveEdge2.weight, 0.01);
//      assertEquals((-1336.98), exclusiveEdge0.weight, 0.01);
//  }

    @Test(timeout = 4000)
    public void test4()  throws Throwable  {
        Edge<String> edge0 = (Edge<String>) mock(Edge.class, new ViolatedAssumptionAnswer());
        ExclusiveEdge<String> exclusiveEdge0 = ExclusiveEdge.of(edge0, (-1057.087));
        int int0 = exclusiveEdge0.compareTo(exclusiveEdge0);
        assertEquals((-1057.087), exclusiveEdge0.weight, 0.01);
        assertEquals(0, int0);
    }
}
